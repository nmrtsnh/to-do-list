{"ast":null,"code":"var _jsxFileName = \"/Users/namrata/Projects/Personal-Project/React-Personal-Project/to-do-list/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport Form from \"./Form\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [todos, setTodos] = useState(JSON.parse(localStorage.getItem(\"todos\")) || []);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [showTasks, setShowTasks] = useState(true);\n  const [viewHistory, setViewHistory] = useState(false);\n  const [activeButton, setActiveButton] = useState(\"tasks\");\n  const confirmationRef = useRef(null);\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n  function handClickOutside(event) {\n    if (confirmationRef.current && !confirmationRef.current.contains(event.target)) {\n      setShowConfirmation(false);\n    }\n  }\n  useEffect(() => {\n    if (showConfirmation) {\n      document.addEventListener(\"mousedown\", handClickOutside);\n    } else {\n      document.removeEventListener(\"mousedown\", handClickOutside);\n    }\n  });\n  function handleAddTask(newTodo) {\n    const todoWithId = {\n      ...newTodo,\n      id: uuidv4(),\n      done: false\n    };\n    const updatedTodos = [...todos, todoWithId];\n    setTodos(updatedTodos);\n    localStorage.setItem(\"todo\", JSON.stringify(updatedTodos));\n  }\n  function handleDeleteTask(id) {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n  }\n  function handleToggleTask(id, show) {\n    // setShowTasks(show);\n    setTodos(prevTodos => prevTodos.map(todo => todo.id === id ? {\n      ...todo,\n      done: !todo.done\n    } : todo));\n  }\n  function handleClearAllTasks() {\n    if (todos.length > 0) {\n      setShowConfirmation(true);\n    }\n  }\n  function handleConfirmation(answer) {\n    setShowConfirmation(false);\n    if (answer === \"yes\") {\n      setTodos([]);\n    }\n  }\n  function handleShowHistory() {\n    setViewHistory(true);\n  }\n  function handleShowTasks() {\n    setViewHistory(false);\n  }\n  const filteredTodos = viewHistory ? todos.filter(todo => todo.done) : todos;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `heading ${showConfirmation ? \"blurred\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"img-todo-list.png\",\n        alt: \"todo list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"TODO LIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-1\",\n          children: \"Create Your List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-app\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `sidebar ${showConfirmation ? \"blurred\" : \"\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-bar\",\n                onClick: () => setShowTasks(!showTasks),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"task-img\",\n                  src: \"task.png\",\n                  alt: \"Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-2\",\n                  onClick: handleShowTasks,\n                  children: \"Tasks\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"history-bar\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"history-img\",\n                  src: \"history.png\",\n                  alt: \"History\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-2\",\n                  onClick: handleShowHistory,\n                  children: \"History\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `form-section ${showConfirmation ? \"blurred\" : \"\"}`,\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onAddTasks: handleAddTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tasks-section\",\n              children: filteredTodos.length === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-3\",\n                children: viewHistory ? \"There are no completed tasks\" : \"There is no task for today!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: `task-list ${showConfirmation ? \"blurred\" : \"\"}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: todo.done,\n                    onChange: () => handleToggleTask(todo.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: todo.done ? {\n                      textDecoration: \"line-through\"\n                    } : {},\n                    children: todo.tasks\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleDeleteTask(todo.id),\n                    children: \"\\u274C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 25\n                  }, this)]\n                }, todo.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `button clear-btn ${showConfirmation ? \"blurred\" : \"\"}`,\n                onClick: handleClearAllTasks,\n                disabled: todos.length === 0,\n                children: \"Clear all tasks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), showConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-background\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"confirmation-modal\",\n                ref: confirmationRef,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"clear\",\n                  children: \"Clear All Tasks\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Are you sure you want to clear all tasks?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"confirmation-btn\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"no-btn confirm-btn\",\n                    onClick: () => handleConfirmation(\"no\"),\n                    children: \"No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"yes-btn confirm-btn\",\n                    onClick: () => handleConfirmation(\"yes\"),\n                    children: \"Yes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n/*\nimport { useState, useRef, useEffect } from \"react\";\nimport Form from \"./Form\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function App() {\n  const [todos, setTodos] = useState(\n    JSON.parse(localStorage.getItem(\"todos\")) || []\n  );\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [showTasks, setShowTasks] = useState(true);\n  const [viewHistory, setViewHistory] = useState(false);\n\n  const confirmationRef = useRef(null);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  function handClickOutside(event) {\n    if (\n      confirmationRef.current &&\n      !confirmationRef.current.contains(event.target)\n    ) {\n      setShowConfirmation(false);\n    }\n  }\n\n  useEffect(() => {\n    if (showConfirmation) {\n      document.addEventListener(\"mousedown\", handClickOutside);\n    } else {\n      document.removeEventListener(\"mousedown\", handClickOutside);\n    }\n  });\n\n  function handleAddTask(newTodo) {\n    const todoWithId = { ...newTodo, id: uuidv4(), done: false };\n    const updatedTodos = [...todos, todoWithId];\n    setTodos(updatedTodos);\n    localStorage.setItem(\"todo\", JSON.stringify(updatedTodos));\n  }\n\n  function handleDeleteTask(id) {\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== id));\n  }\n\n  function handleToggleTask(id, show) {\n    // setShowTasks(show);\n    setTodos((prevTodos) =>\n      prevTodos.map((todo) =>\n        todo.id === id ? { ...todo, done: !todo.done } : todo\n      )\n    );\n  }\n  function handleClearAllTasks() {\n    if (todos.length > 0) {\n      setShowConfirmation(true);\n    }\n  }\n\n  function handleConfirmation(answer) {\n    setShowConfirmation(false);\n    if (answer === \"yes\") {\n      setTodos([]);\n    }\n  }\n\n  function handleShowHistory() {\n    setViewHistory(true);\n  }\n\n  function handleShowTasks() {\n    setViewHistory(false);\n  }\n\n  const filteredTodos = viewHistory ? todos.filter((todo) => todo.done) : todos;\n\n  return (\n    <div className=\"app-container\">\n      <div className={`heading ${showConfirmation ? \"blurred\" : \"\"}`}>\n        <img src=\"img-todo-list.png\" alt=\"todo list\"></img>\n        <div className=\"text\">\n          <h1>TODO LIST</h1>\n          <p className=\"text-1\">Create Your List</p>\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <section className=\"main\">\n          <div className=\"main-app\">\n            <div className=\"text-bar\">\n              <div className={`sidebar ${showConfirmation ? \"blurred\" : \"\"}`}>\n                <div\n                  className=\"task-bar\"\n                  onClick={() => setShowTasks(!showTasks)}\n                >\n                  <img className=\"task-img\" src=\"task.png\" alt=\"Task\" />\n                  <span className=\"text-2\" onClick={handleShowTasks}>\n                    Tasks\n                  </span>\n                </div>\n                <div className=\"history-bar\">\n                  <img\n                    className=\"history-img\"\n                    src=\"history.png\"\n                    alt=\"History\"\n                  />\n                  <span className=\"text-2\" onClick={handleShowHistory}>\n                    History\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"input-bar\">\n              <div\n                className={`form-section ${showConfirmation ? \"blurred\" : \"\"}`}\n              >\n                <Form onAddTasks={handleAddTask} />\n              </div>\n              <div className=\"tasks-section\">\n                {filteredTodos.length === 0 ? (\n                  <span className=\"text-3\">There is no task for today!</span>\n                ) : (\n                  <ul>\n                    {filteredTodos.map((todo) => (\n                      <li\n                        className={`task-list ${\n                          showConfirmation ? \"blurred\" : \"\"\n                        }`}\n                        key={todo.id}\n                      >\n                        <input\n                          type=\"checkbox\"\n                          checked={todo.done}\n                          onChange={() => handleToggleTask(todo.id)}\n                        />\n                        <span\n                          style={\n                            todo.done ? { textDecoration: \"line-through\" } : {}\n                          }\n                        >\n                          {todo.tasks}\n                        </span>\n                        <button onClick={() => handleDeleteTask(todo.id)}>\n                          ❌\n                        </button>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              </div>\n              <div>\n                <button\n                  className={`button clear-btn ${\n                    showConfirmation ? \"blurred\" : \"\"\n                  }`}\n                  onClick={handleClearAllTasks}\n                  disabled={todos.length === 0}\n                >\n                  Clear all tasks\n                </button>\n              </div>\n              {showConfirmation && (\n                <div className=\"modal-background\">\n                  <div className=\"confirmation-modal\" ref={confirmationRef}>\n                    <h3 className=\"clear\">Clear All Tasks</h3>\n                    <p>Are you sure you want to clear all tasks?</p>\n                    <div className=\"confirmation-btn\">\n                      <button\n                        className=\"no-btn confirm-btn\"\n                        onClick={() => handleConfirmation(\"no\")}\n                      >\n                        No\n                      </button>\n                      <button\n                        className=\"yes-btn confirm-btn\"\n                        onClick={() => handleConfirmation(\"yes\")}\n                      >\n                        Yes\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n*/\n_s(App, \"avQ0Yz8Jb+EVy683xb7sSXAFIus=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","useEffect","Form","v4","uuidv4","jsxDEV","_jsxDEV","App","_s","todos","setTodos","JSON","parse","localStorage","getItem","showConfirmation","setShowConfirmation","showTasks","setShowTasks","viewHistory","setViewHistory","activeButton","setActiveButton","confirmationRef","setItem","stringify","handClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleAddTask","newTodo","todoWithId","id","done","updatedTodos","handleDeleteTask","prevTodos","filter","todo","handleToggleTask","show","map","handleClearAllTasks","length","handleConfirmation","answer","handleShowHistory","handleShowTasks","filteredTodos","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAddTasks","type","checked","onChange","style","textDecoration","tasks","disabled","ref","_c","$RefreshReg$"],"sources":["/Users/namrata/Projects/Personal-Project/React-Personal-Project/to-do-list/src/App.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport Form from \"./Form\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function App() {\n  const [todos, setTodos] = useState(\n    JSON.parse(localStorage.getItem(\"todos\")) || []\n  );\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [showTasks, setShowTasks] = useState(true);\n  const [viewHistory, setViewHistory] = useState(false);\n  const [activeButton, setActiveButton] = useState(\"tasks\");\n\n  const confirmationRef = useRef(null);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  function handClickOutside(event) {\n    if (\n      confirmationRef.current &&\n      !confirmationRef.current.contains(event.target)\n    ) {\n      setShowConfirmation(false);\n    }\n  }\n\n  useEffect(() => {\n    if (showConfirmation) {\n      document.addEventListener(\"mousedown\", handClickOutside);\n    } else {\n      document.removeEventListener(\"mousedown\", handClickOutside);\n    }\n  });\n\n  function handleAddTask(newTodo) {\n    const todoWithId = { ...newTodo, id: uuidv4(), done: false };\n    const updatedTodos = [...todos, todoWithId];\n    setTodos(updatedTodos);\n    localStorage.setItem(\"todo\", JSON.stringify(updatedTodos));\n  }\n\n  function handleDeleteTask(id) {\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== id));\n  }\n\n  function handleToggleTask(id, show) {\n    // setShowTasks(show);\n    setTodos((prevTodos) =>\n      prevTodos.map((todo) =>\n        todo.id === id ? { ...todo, done: !todo.done } : todo\n      )\n    );\n  }\n  function handleClearAllTasks() {\n    if (todos.length > 0) {\n      setShowConfirmation(true);\n    }\n  }\n\n  function handleConfirmation(answer) {\n    setShowConfirmation(false);\n    if (answer === \"yes\") {\n      setTodos([]);\n    }\n  }\n\n  function handleShowHistory() {\n    setViewHistory(true);\n  }\n\n  function handleShowTasks() {\n    setViewHistory(false);\n  }\n\n  const filteredTodos = viewHistory ? todos.filter((todo) => todo.done) : todos;\n\n  return (\n    <div className=\"app-container\">\n      <div className={`heading ${showConfirmation ? \"blurred\" : \"\"}`}>\n        <img src=\"img-todo-list.png\" alt=\"todo list\"></img>\n        <div className=\"text\">\n          <h1>TODO LIST</h1>\n          <p className=\"text-1\">Create Your List</p>\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <section className=\"main\">\n          <div className=\"main-app\">\n            <div className=\"text-bar\">\n              <div className={`sidebar ${showConfirmation ? \"blurred\" : \"\"}`}>\n                <div\n                  className=\"task-bar\"\n                  onClick={() => setShowTasks(!showTasks)}\n                >\n                  <img className=\"task-img\" src=\"task.png\" alt=\"Task\" />\n                  <span className=\"text-2\" onClick={handleShowTasks}>\n                    Tasks\n                  </span>\n                </div>\n                <div className=\"history-bar\">\n                  <img\n                    className=\"history-img\"\n                    src=\"history.png\"\n                    alt=\"History\"\n                  />\n                  <span className=\"text-2\" onClick={handleShowHistory}>\n                    History\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"input-bar\">\n              <div\n                className={`form-section ${showConfirmation ? \"blurred\" : \"\"}`}\n              >\n                <Form onAddTasks={handleAddTask} />\n              </div>\n              <div className=\"tasks-section\">\n                {filteredTodos.length === 0 ? (\n                  <span className=\"text-3\">\n                    {viewHistory\n                      ? \"There are no completed tasks\"\n                      : \"There is no task for today!\"}\n                  </span>\n                ) : (\n                  <ul>\n                    {filteredTodos.map((todo) => (\n                      <li\n                        className={`task-list ${\n                          showConfirmation ? \"blurred\" : \"\"\n                        }`}\n                        key={todo.id}\n                      >\n                        <input\n                          type=\"checkbox\"\n                          checked={todo.done}\n                          onChange={() => handleToggleTask(todo.id)}\n                        />\n                        <span\n                          style={\n                            todo.done ? { textDecoration: \"line-through\" } : {}\n                          }\n                        >\n                          {todo.tasks}\n                        </span>\n                        <button onClick={() => handleDeleteTask(todo.id)}>\n                          ❌\n                        </button>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              </div>\n              <div>\n                <button\n                  className={`button clear-btn ${\n                    showConfirmation ? \"blurred\" : \"\"\n                  }`}\n                  onClick={handleClearAllTasks}\n                  disabled={todos.length === 0}\n                >\n                  Clear all tasks\n                </button>\n              </div>\n              {showConfirmation && (\n                <div className=\"modal-background\">\n                  <div className=\"confirmation-modal\" ref={confirmationRef}>\n                    <h3 className=\"clear\">Clear All Tasks</h3>\n                    <p>Are you sure you want to clear all tasks?</p>\n                    <div className=\"confirmation-btn\">\n                      <button\n                        className=\"no-btn confirm-btn\"\n                        onClick={() => handleConfirmation(\"no\")}\n                      >\n                        No\n                      </button>\n                      <button\n                        className=\"yes-btn confirm-btn\"\n                        onClick={() => handleConfirmation(\"yes\")}\n                      >\n                        Yes\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n\n/*\nimport { useState, useRef, useEffect } from \"react\";\nimport Form from \"./Form\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function App() {\n  const [todos, setTodos] = useState(\n    JSON.parse(localStorage.getItem(\"todos\")) || []\n  );\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const [showTasks, setShowTasks] = useState(true);\n  const [viewHistory, setViewHistory] = useState(false);\n\n  const confirmationRef = useRef(null);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  function handClickOutside(event) {\n    if (\n      confirmationRef.current &&\n      !confirmationRef.current.contains(event.target)\n    ) {\n      setShowConfirmation(false);\n    }\n  }\n\n  useEffect(() => {\n    if (showConfirmation) {\n      document.addEventListener(\"mousedown\", handClickOutside);\n    } else {\n      document.removeEventListener(\"mousedown\", handClickOutside);\n    }\n  });\n\n  function handleAddTask(newTodo) {\n    const todoWithId = { ...newTodo, id: uuidv4(), done: false };\n    const updatedTodos = [...todos, todoWithId];\n    setTodos(updatedTodos);\n    localStorage.setItem(\"todo\", JSON.stringify(updatedTodos));\n  }\n\n  function handleDeleteTask(id) {\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== id));\n  }\n\n  function handleToggleTask(id, show) {\n    // setShowTasks(show);\n    setTodos((prevTodos) =>\n      prevTodos.map((todo) =>\n        todo.id === id ? { ...todo, done: !todo.done } : todo\n      )\n    );\n  }\n  function handleClearAllTasks() {\n    if (todos.length > 0) {\n      setShowConfirmation(true);\n    }\n  }\n\n  function handleConfirmation(answer) {\n    setShowConfirmation(false);\n    if (answer === \"yes\") {\n      setTodos([]);\n    }\n  }\n\n  function handleShowHistory() {\n    setViewHistory(true);\n  }\n\n  function handleShowTasks() {\n    setViewHistory(false);\n  }\n\n  const filteredTodos = viewHistory ? todos.filter((todo) => todo.done) : todos;\n\n  return (\n    <div className=\"app-container\">\n      <div className={`heading ${showConfirmation ? \"blurred\" : \"\"}`}>\n        <img src=\"img-todo-list.png\" alt=\"todo list\"></img>\n        <div className=\"text\">\n          <h1>TODO LIST</h1>\n          <p className=\"text-1\">Create Your List</p>\n        </div>\n      </div>\n\n      <div className=\"card\">\n        <section className=\"main\">\n          <div className=\"main-app\">\n            <div className=\"text-bar\">\n              <div className={`sidebar ${showConfirmation ? \"blurred\" : \"\"}`}>\n                <div\n                  className=\"task-bar\"\n                  onClick={() => setShowTasks(!showTasks)}\n                >\n                  <img className=\"task-img\" src=\"task.png\" alt=\"Task\" />\n                  <span className=\"text-2\" onClick={handleShowTasks}>\n                    Tasks\n                  </span>\n                </div>\n                <div className=\"history-bar\">\n                  <img\n                    className=\"history-img\"\n                    src=\"history.png\"\n                    alt=\"History\"\n                  />\n                  <span className=\"text-2\" onClick={handleShowHistory}>\n                    History\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"input-bar\">\n              <div\n                className={`form-section ${showConfirmation ? \"blurred\" : \"\"}`}\n              >\n                <Form onAddTasks={handleAddTask} />\n              </div>\n              <div className=\"tasks-section\">\n                {filteredTodos.length === 0 ? (\n                  <span className=\"text-3\">There is no task for today!</span>\n                ) : (\n                  <ul>\n                    {filteredTodos.map((todo) => (\n                      <li\n                        className={`task-list ${\n                          showConfirmation ? \"blurred\" : \"\"\n                        }`}\n                        key={todo.id}\n                      >\n                        <input\n                          type=\"checkbox\"\n                          checked={todo.done}\n                          onChange={() => handleToggleTask(todo.id)}\n                        />\n                        <span\n                          style={\n                            todo.done ? { textDecoration: \"line-through\" } : {}\n                          }\n                        >\n                          {todo.tasks}\n                        </span>\n                        <button onClick={() => handleDeleteTask(todo.id)}>\n                          ❌\n                        </button>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              </div>\n              <div>\n                <button\n                  className={`button clear-btn ${\n                    showConfirmation ? \"blurred\" : \"\"\n                  }`}\n                  onClick={handleClearAllTasks}\n                  disabled={todos.length === 0}\n                >\n                  Clear all tasks\n                </button>\n              </div>\n              {showConfirmation && (\n                <div className=\"modal-background\">\n                  <div className=\"confirmation-modal\" ref={confirmationRef}>\n                    <h3 className=\"clear\">Clear All Tasks</h3>\n                    <p>Are you sure you want to clear all tasks?</p>\n                    <div className=\"confirmation-btn\">\n                      <button\n                        className=\"no-btn confirm-btn\"\n                        onClick={() => handleConfirmation(\"no\")}\n                      >\n                        No\n                      </button>\n                      <button\n                        className=\"yes-btn confirm-btn\"\n                        onClick={() => handleConfirmation(\"yes\")}\n                      >\n                        Yes\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </section>\n      </div>\n    </div>\n  );\n}\n*/\n"],"mappings":"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C,YAAA;EAAA,OACH,CAAC;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjMArD,EAAA,CAlMwBD,GAAG;AAAAiE,EAAA,GAAHjE,GAAG;AAAA,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}